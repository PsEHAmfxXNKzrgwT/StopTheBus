{"ast":null,"code":"import React from'react';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";function GameBoard(_ref){let{playerName,gameState,answers,setAnswers,setMessage,setGameState}=_ref;const handleInputChange=(category,value)=>{setAnswers(prev=>({...prev,[category]:value}));};const handleSubmitAnswers=async()=>{const allFilled=gameState.categories.every(cat=>answers[cat]&&answers[cat].trim()!=='');if(!allFilled)return setMessage(\"‚ùå Fill all categories.\");const invalidAnswers=gameState.categories.filter(cat=>{var _answers$cat,_gameState$currentLet;const answer=(_answers$cat=answers[cat])===null||_answers$cat===void 0?void 0:_answers$cat.trim();const roundLetter=(_gameState$currentLet=gameState.currentLetter)===null||_gameState$currentLet===void 0?void 0:_gameState$currentLet.toUpperCase();return!answer||answer[0].toUpperCase()!==roundLetter;});if(invalidAnswers.length>0){return setMessage(`‚ùå Answers for ${invalidAnswers.join(', ')} must start with ${gameState.currentLetter}`);}try{const res=await fetch('http://localhost:6464/submit-answers',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({gameId:gameState.gameId,playerName,answers})});const text=await res.text();setMessage(\"‚úÖ \"+text);}catch{setMessage(\"‚ùå Failed to submit.\");}};const handleStartRound=async()=>{try{const res=await fetch('http://localhost:6464/start-round',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({gameId:gameState.gameId,playerName})});const data=await res.json();setGameState(prev=>({...prev,currentRound:data.currentRound,currentLetter:data.currentLetter}));setAnswers({});setMessage(`üî§ New round! Letter: ${data.currentLetter}`);}catch{setMessage('‚ùå Error starting round.');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDFB2 Round \",gameState.currentRound]}),gameState.currentLetter&&/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDD70\\uFE0F Letter: \",/*#__PURE__*/_jsx(\"b\",{children:gameState.currentLetter})]}),/*#__PURE__*/_jsx(\"div\",{className:\"category-inputs\",children:gameState.categories.map(cat=>/*#__PURE__*/_jsxs(\"div\",{className:\"category-input-box\",children:[/*#__PURE__*/_jsx(\"label\",{children:cat}),/*#__PURE__*/_jsx(\"input\",{value:answers[cat]||'',onChange:e=>handleInputChange(cat,e.target.value)})]},cat))}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitAnswers,children:\"\\uD83D\\uDCE4 Submit\"}),gameState.host===playerName&&/*#__PURE__*/_jsx(\"button\",{onClick:handleStartRound,children:\"\\uD83D\\uDD04 Next Round\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scores\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83C\\uDFC6 Scores\"}),Object.entries(gameState.scores).map(_ref2=>{let[player,score]=_ref2;return/*#__PURE__*/_jsxs(\"p\",{children:[player,\": \",score]},player);})]})]});}export default GameBoard;","map":{"version":3,"names":["React","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","GameBoard","_ref","playerName","gameState","answers","setAnswers","setMessage","setGameState","handleInputChange","category","value","prev","handleSubmitAnswers","allFilled","categories","every","cat","trim","invalidAnswers","filter","_answers$cat","_gameState$currentLet","answer","roundLetter","currentLetter","toUpperCase","length","join","res","fetch","method","headers","body","JSON","stringify","gameId","text","handleStartRound","data","json","currentRound","children","className","map","onChange","e","target","style","marginTop","onClick","host","Object","entries","scores","_ref2","player","score"],"sources":["/Users/logan/Desktop/STB_1/stop-the-bus/frontend/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\n\nfunction GameBoard({ playerName, gameState, answers, setAnswers, setMessage, setGameState }) {\n  const handleInputChange = (category, value) => {\n    setAnswers((prev) => ({ ...prev, [category]: value }));\n  };\n\n  const handleSubmitAnswers = async () => {\n    const allFilled = gameState.categories.every(\n      (cat) => answers[cat] && answers[cat].trim() !== ''\n    );\n    if (!allFilled) return setMessage(\"‚ùå Fill all categories.\");\n\n    const invalidAnswers = gameState.categories.filter((cat) => {\n      const answer = answers[cat]?.trim();\n      const roundLetter = gameState.currentLetter?.toUpperCase();\n      return !answer || answer[0].toUpperCase() !== roundLetter;\n    });\n\n    if (invalidAnswers.length > 0) {\n      return setMessage(`‚ùå Answers for ${invalidAnswers.join(', ')} must start with ${gameState.currentLetter}`);\n    }\n\n    try {\n      const res = await fetch('http://localhost:6464/submit-answers', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ gameId: gameState.gameId, playerName, answers }),\n      });\n      const text = await res.text();\n      setMessage(\"‚úÖ \" + text);\n    } catch {\n      setMessage(\"‚ùå Failed to submit.\");\n    }\n  };\n\n  const handleStartRound = async () => {\n    try {\n      const res = await fetch('http://localhost:6464/start-round', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ gameId: gameState.gameId, playerName }),\n      });\n      const data = await res.json();\n      setGameState((prev) => ({\n        ...prev,\n        currentRound: data.currentRound,\n        currentLetter: data.currentLetter,\n      }));\n      setAnswers({});\n      setMessage(`üî§ New round! Letter: ${data.currentLetter}`);\n    } catch {\n      setMessage('‚ùå Error starting round.');\n    }\n  };\n\n  return (\n    <>\n      <h3>üé≤ Round {gameState.currentRound}</h3>\n      {gameState.currentLetter && <p>üÖ∞Ô∏è Letter: <b>{gameState.currentLetter}</b></p>}\n      <div className=\"category-inputs\">\n        {gameState.categories.map((cat) => (\n          <div key={cat} className=\"category-input-box\">\n            <label>{cat}</label>\n            <input\n              value={answers[cat] || ''}\n              onChange={(e) => handleInputChange(cat, e.target.value)}\n            />\n          </div>\n        ))}\n      </div>\n      <div style={{ marginTop: '10px' }}>\n        <button onClick={handleSubmitAnswers}>üì§ Submit</button>\n        {gameState.host === playerName && <button onClick={handleStartRound}>üîÑ Next Round</button>}\n      </div>\n      <div className=\"scores\">\n        <h4>üèÜ Scores</h4>\n        {Object.entries(gameState.scores).map(([player, score]) => (\n          <p key={player}>{player}: {score}</p>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}