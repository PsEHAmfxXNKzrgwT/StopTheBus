{"ast":null,"code":"import React,{useEffect,useState}from'react';import socket from'../socket';// adjust path if your socket file is in a different location\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function GameBoard(_ref){let{gameState,playerName,answers,setAnswers,setMessage}=_ref;const[submissions,setSubmissions]=useState({});const[submitted,setSubmitted]=useState(false);const[letter,setLetter]=useState(null);const handleChange=(category,value)=>{setAnswers(prev=>({...prev,[category]:value}));};const handleSubmit=async()=>{if(submitted)return setMessage('✅ Already submitted!');const res=await fetch('http://localhost:6464/submit-answers',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({gameId:gameState.gameId,playerName,answers})});const data=await res.json();if(res.ok){setSubmitted(true);setMessage('✅ Answers submitted!');}else{setMessage(data.message||'❌ Submission failed.');}};const fetchSubmissions=async()=>{const res=await fetch(`http://localhost:6464/submissions?gameId=${gameState.gameId}`);const data=await res.json();setSubmissions(data);};const handleUpdateScore=async(player,delta)=>{const res=await fetch('http://localhost:6464/update-score',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({gameId:gameState.gameId,playerName:player,score:delta})});const data=await res.json();if(res.ok){setMessage('✅ Score updated.');}else{setMessage(data.message||'❌ Failed to update score.');}};const handleNextRound=async()=>{const res=await fetch('http://localhost:6464/next-round',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({gameId:gameState.gameId,playerName})});const data=await res.json();if(res.ok){setSubmitted(false);setAnswers({});setMessage('➡️ Moved to next round.');}else{setMessage(data.message||'❌ Failed to move to next round.');}};useEffect(()=>{const handleRoundStarted=_ref2=>{let{letter}=_ref2;setLetter(letter);};socket.on('roundStarted',handleRoundStarted);return()=>{socket.off('roundStarted',handleRoundStarted);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"game-board\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Round \",gameState.currentRound]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Letter: \",gameState.currentLetter||'Waiting...']}),!submitted&&/*#__PURE__*/_jsxs(\"div\",{className:\"answer-form\",children:[gameState.categories.map(cat=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[cat,\":\"]}),/*#__PURE__*/_jsx(\"input\",{value:answers[cat]||'',onChange:e=>handleChange(cat,e.target.value)})]},cat)),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"\\u2705 Submit Answers\"})]}),submitted&&/*#__PURE__*/_jsxs(\"div\",{className:\"submissions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Submissions\"}),Object.entries(submissions).map((_ref3,idx)=>{let[player,ans]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:player}),/*#__PURE__*/_jsx(\"ul\",{children:Object.entries(ans).map(_ref4=>{let[cat,val]=_ref4;return/*#__PURE__*/_jsxs(\"li\",{children:[cat,\": \",val]},cat);})}),gameState.host===playerName&&/*#__PURE__*/_jsxs(\"div\",{className:\"score-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUpdateScore(player,1),children:\"+1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUpdateScore(player,-1),children:\"-1\"})]})]},idx);})]}),gameState.host===playerName&&submitted&&/*#__PURE__*/_jsx(\"button\",{onClick:handleNextRound,children:\"\\u27A1\\uFE0F Next Round\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"scores\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Scores\"}),/*#__PURE__*/_jsx(\"ul\",{children:Object.entries(gameState.scores).map(_ref5=>{let[player,score]=_ref5;return/*#__PURE__*/_jsxs(\"li\",{children:[player,\": \",score]},player);})})]})]});}export default GameBoard;","map":{"version":3,"names":["React","useEffect","useState","socket","jsxs","_jsxs","jsx","_jsx","GameBoard","_ref","gameState","playerName","answers","setAnswers","setMessage","submissions","setSubmissions","submitted","setSubmitted","letter","setLetter","handleChange","category","value","prev","handleSubmit","res","fetch","method","headers","body","JSON","stringify","gameId","data","json","ok","message","fetchSubmissions","handleUpdateScore","player","delta","score","handleNextRound","handleRoundStarted","_ref2","on","off","className","children","currentRound","currentLetter","categories","map","cat","onChange","e","target","onClick","Object","entries","_ref3","idx","ans","_ref4","val","host","scores","_ref5"],"sources":["/Users/logan/Desktop/STB_1/stop-the-bus/frontend/src/components/GameBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport socket from '../socket'; // adjust path if your socket file is in a different location\n\nfunction GameBoard({ gameState, playerName, answers, setAnswers, setMessage }) {\n  const [submissions, setSubmissions] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [letter, setLetter] = useState(null);\n\n  const handleChange = (category, value) => {\n    setAnswers((prev) => ({ ...prev, [category]: value }));\n  };\n\n  const handleSubmit = async () => {\n    if (submitted) return setMessage('✅ Already submitted!');\n    const res = await fetch('http://localhost:6464/submit-answers', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gameId: gameState.gameId,\n        playerName,\n        answers,\n      }),\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSubmitted(true);\n      setMessage('✅ Answers submitted!');\n    } else {\n      setMessage(data.message || '❌ Submission failed.');\n    }\n  };\n\n  const fetchSubmissions = async () => {\n    const res = await fetch(`http://localhost:6464/submissions?gameId=${gameState.gameId}`);\n    const data = await res.json();\n    setSubmissions(data);\n  };\n\n  const handleUpdateScore = async (player, delta) => {\n    const res = await fetch('http://localhost:6464/update-score', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gameId: gameState.gameId,\n        playerName: player,\n        score: delta,\n      }),\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setMessage('✅ Score updated.');\n    } else {\n      setMessage(data.message || '❌ Failed to update score.');\n    }\n  };\n\n  const handleNextRound = async () => {\n    const res = await fetch('http://localhost:6464/next-round', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gameId: gameState.gameId,\n        playerName,\n      }),\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSubmitted(false);\n      setAnswers({});\n      setMessage('➡️ Moved to next round.');\n    } else {\n      setMessage(data.message || '❌ Failed to move to next round.');\n    }\n  };\n\n  useEffect(() => {\n  const handleRoundStarted = ({ letter }) => {\n    setLetter(letter);\n  };\n\n  socket.on('roundStarted', handleRoundStarted);\n\n  return () => {\n    socket.off('roundStarted', handleRoundStarted);\n  };\n}, []);\n\n  return (\n    <div className=\"game-board\">\n      <h2>Round {gameState.currentRound}</h2>\n      <h3>Letter: {gameState.currentLetter || 'Waiting...'}</h3>\n\n      {!submitted && (\n        <div className=\"answer-form\">\n          {gameState.categories.map((cat) => (\n            <div key={cat}>\n              <label>{cat}:</label>\n              <input\n                value={answers[cat] || ''}\n                onChange={(e) => handleChange(cat, e.target.value)}\n              />\n            </div>\n          ))}\n          <button onClick={handleSubmit}>✅ Submit Answers</button>\n        </div>\n      )}\n\n      {submitted && (\n        <div className=\"submissions\">\n          <h3>Submissions</h3>\n          {Object.entries(submissions).map(([player, ans], idx) => (\n            <div key={idx}>\n              <strong>{player}</strong>\n              <ul>\n                {Object.entries(ans).map(([cat, val]) => (\n                  <li key={cat}>\n                    {cat}: {val}\n                  </li>\n                ))}\n              </ul>\n              {gameState.host === playerName && (\n                <div className=\"score-controls\">\n                  <button onClick={() => handleUpdateScore(player, 1)}>+1</button>\n                  <button onClick={() => handleUpdateScore(player, -1)}>-1</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {gameState.host === playerName && submitted && (\n        <button onClick={handleNextRound}>➡️ Next Round</button>\n      )}\n\n      <div className=\"scores\">\n        <h3>Scores</h3>\n        <ul>\n          {Object.entries(gameState.scores).map(([player, score]) => (\n            <li key={player}>\n              {player}: {score}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}